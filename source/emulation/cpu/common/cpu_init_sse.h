/*
 *  Copyright (C) 2012-2025  The BoxedWine Team
 *
 *  This program is free software; you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation; either version 2 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
 */

INIT_CPU(AddpsXmm, addpsXmm)
INIT_CPU(AddpsE128, addpsE128)
INIT_CPU(AddssXmm, addssXmm)
INIT_CPU(AddssE32, addssE32)
INIT_CPU(SubpsXmm, subpsXmm)
INIT_CPU(SubpsE128, subpsE128)
INIT_CPU(SubssXmm, subssXmm)
INIT_CPU(SubssE32, subssE32)
INIT_CPU(MulpsXmm, mulpsXmm)
INIT_CPU(MulpsE128, mulpsE128)
INIT_CPU(MulssXmm, mulssXmm)
INIT_CPU(MulssE32, mulssE32)
INIT_CPU(DivpsXmm, divpsXmm)
INIT_CPU(DivpsE128, divpsE128)
INIT_CPU(DivssXmm, divssXmm)
INIT_CPU(DivssE32, divssE32)
INIT_CPU(RcppsXmm, rcppsXmm)
INIT_CPU(RcppsE128, rcppsE128)
INIT_CPU(RcpssXmm, rcpssXmm)
INIT_CPU(RcpssE32, rcpssE32)
INIT_CPU(SqrtpsXmm, sqrtpsXmm)
INIT_CPU(SqrtpsE128, sqrtpsE128)
INIT_CPU(SqrtssXmm, sqrtssXmm)
INIT_CPU(SqrtssE32, sqrtssE32)
INIT_CPU(RsqrtpsXmm, rsqrtpsXmm)
INIT_CPU(RsqrtpsE128, rsqrtpsE128)
INIT_CPU(RsqrtssXmm, rsqrtssXmm)
INIT_CPU(RsqrtssE32, rsqrtssE32)
INIT_CPU(MaxpsXmm, maxpsXmm)
INIT_CPU(MaxpsE128, maxpsE128)
INIT_CPU(MaxssXmm, maxssXmm)
INIT_CPU(MaxssE32, maxssE32)
INIT_CPU(MinpsXmm, minpsXmm)
INIT_CPU(MinpsE128, minpsE128)
INIT_CPU(MinssXmm, minssXmm)
INIT_CPU(MinssE32, minssE32)
INIT_CPU(PavgbMmxMmx, pavgbMmxMmx)
INIT_CPU(PavgbMmxE64, pavgbMmxE64)
INIT_CPU(PavgwMmxMmx, pavgwMmxMmx)
INIT_CPU(PavgwMmxE64, pavgwMmxE64)
INIT_CPU(PsadbwMmxMmx, psadbwMmxMmx)
INIT_CPU(PsadbwMmxE64, psadbwMmxE64)
INIT_CPU(PextrwR32Mmx, pextrwR32Mmx)
INIT_CPU(PextrwE16Mmx, pextrwE16Mmx)
INIT_CPU(PinsrwMmxR32, pinsrwMmxR32)
INIT_CPU(PinsrwMmxE16, pinsrwMmxE16)
INIT_CPU(PmaxswMmxMmx, pmaxswMmxMmx)
INIT_CPU(PmaxswMmxE64, pmaxswMmxE64)
INIT_CPU(PmaxubMmxMmx, pmaxubMmxMmx)
INIT_CPU(PmaxubMmxE64, pmaxubMmxE64)
INIT_CPU(PminswMmxMmx, pminswMmxMmx)
INIT_CPU(PminswMmxE64, pminswMmxE64)
INIT_CPU(PminubMmxMmx, pminubMmxMmx)
INIT_CPU(PminubMmxE64, pminubMmxE64)
INIT_CPU(PmovmskbR32Mmx, pmovmskbR32Mmx)
INIT_CPU(PmulhuwMmxMmx, pmulhuwMmxMmx)
INIT_CPU(PmulhuwMmxE64, pmulhuwMmxE64)
INIT_CPU(PshufwMmxMmx, pshufwMmxMmx)
INIT_CPU(PshufwMmxE64, pshufwMmxE64)
INIT_CPU(AndnpsXmmXmm, andnpsXmmXmm)
INIT_CPU(AndnpsXmmE128, andnpsXmmE128)
INIT_CPU(AndpsXmmXmm, andpsXmmXmm)
INIT_CPU(AndpsXmmE128, andpsXmmE128)
INIT_CPU(OrpsXmmXmm, orpsXmmXmm)
INIT_CPU(OrpsXmmE128, orpsXmmE128)
INIT_CPU(XorpsXmmXmm, xorpsXmmXmm)
INIT_CPU(XorpsXmmE128, xorpsXmmE128)
INIT_CPU(Cvtpi2psXmmMmx, cvtpi2psXmmMmx)
INIT_CPU(Cvtpi2psXmmE64, cvtpi2psXmmE64)
INIT_CPU(Cvtps2piMmxXmm, cvtps2piMmxXmm)
INIT_CPU(Cvtps2piMmxE64, cvtps2piMmxE64)
INIT_CPU(Cvtsi2ssXmmR32, cvtsi2ssXmmR32)
INIT_CPU(Cvtsi2ssXmmE32, cvtsi2ssXmmE32)
INIT_CPU(Cvtss2siR32Xmm, cvtss2siR32Xmm)
INIT_CPU(Cvtss2siR32E32, cvtss2siR32E32)
INIT_CPU(Cvttps2piMmxXmm, cvttps2piMmxXmm)
INIT_CPU(Cvttps2piMmxE64, cvttps2piMmxE64)
INIT_CPU(Cvttss2siR32Xmm, cvttss2siR32Xmm)
INIT_CPU(Cvttss2siR32E32, cvttss2siR32E32)
INIT_CPU(MovapsXmmXmm, movapsXmmXmm)
INIT_CPU(MovapsXmmE128, movapsXmmE128)
INIT_CPU(MovapsE128Xmm, movapsE128Xmm)
INIT_CPU(MovhlpsXmmXmm, movhlpsXmmXmm)
INIT_CPU(MovlhpsXmmXmm, movlhpsXmmXmm)
INIT_CPU(MovhpsXmmE64, movhpsXmmE64)
INIT_CPU(MovhpsE64Xmm, movhpsE64Xmm)
INIT_CPU(MovlpsXmmE64, movlpsXmmE64)
INIT_CPU(MovlpsE64Xmm, movlpsE64Xmm)
INIT_CPU(MovmskpsR32Xmm, movmskpsR32Xmm)
INIT_CPU(MovssXmmXmm, movssXmmXmm)
INIT_CPU(MovssXmmE32, movssXmmE32)
INIT_CPU(MovssE32Xmm, movssE32Xmm)
INIT_CPU(MovupsXmmXmm, movupsXmmXmm)
INIT_CPU(MovupsXmmE128, movupsXmmE128)
INIT_CPU(MovupsE128Xmm, movupsE128Xmm)
INIT_CPU(MaskmovqEDIMmxMmx, maskmovqEDIMmxMmx)
INIT_CPU(MovntpsE128Xmm, movntpsE128Xmm)
INIT_CPU(MovntqE64Mmx, movntqE64Mmx)
INIT_CPU(ShufpsXmmXmm, shufpsXmmXmm)
INIT_CPU(ShufpsXmmE128, shufpsXmmE128)
INIT_CPU(UnpckhpsXmmXmm, unpckhpsXmmXmm)
INIT_CPU(UnpckhpsXmmE128, unpckhpsXmmE128)
INIT_CPU(UnpcklpsXmmXmm, unpcklpsXmmXmm)
INIT_CPU(UnpcklpsXmmE128, unpcklpsXmmE128)
INIT_CPU(PrefetchT0, prefetchT0)
INIT_CPU(PrefetchT1, prefetchT1)
INIT_CPU(PrefetchT2, prefetchT2)
INIT_CPU(PrefetchNTA, prefetchNTA)
INIT_CPU(CmppsXmmXmm, cmppsXmmXmm)
INIT_CPU(CmppsXmmE128, cmppsXmmE128)
INIT_CPU(CmpssXmmXmm, cmpssXmmXmm)
INIT_CPU(CmpssXmmE32, cmpssXmmE32)
INIT_CPU(ComissXmmXmm, comissXmmXmm)
INIT_CPU(ComissXmmE32, comissXmmE32)
INIT_CPU(UcomissXmmXmm, ucomissXmmXmm)
INIT_CPU(UcomissXmmE32, ucomissXmmE32)
INIT_CPU(Stmxcsr, stmxcsr)
INIT_CPU(Ldmxcsr, ldmxcsr)
INIT_CPU(Sfence, sfence)